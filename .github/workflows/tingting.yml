name: CI/CD Pipeline

on:
  workflow_dispatch: {}
  push:
    branches:
      - staging

jobs:
  build:
    name: Build Docker Image
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate environment files
        run: |
          echo "${{ secrets.AUTH_SERVICE_ENV }}" > ./tingting_backend/services/auth_service/.env.development.local
          echo "${{ secrets.USER_SERVICE_ENV }}" > ./tingting_backend/services/user_service/.env.development.local
          echo "${{ secrets.CHAT_SERVICE_ENV }}" > ./tingting_backend/services/chat_service/.env
          echo "${{ secrets.NOTIFICATION_SERVICE_ENV }}" > ./tingting_backend/services/notification_service/.env
          echo "${{ secrets.CLOUD_SERVICE_ENV }}" > ./tingting_backend/services/cloud-service/.env
          cat > ./tingting_backend/services/notification_service/secrets/serviceAccountKey.json <<EOF
          ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          EOF

      - name: Validate Firebase JSON
        run: jq . ./tingting_backend/services/notification_service/secrets/serviceAccountKey.json

      - name: Build Docker
        run: docker compose build
        working-directory: ./tingting_backend/services

  deploy:
    name: Deploy to EC2
    runs-on: self-hosted
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restart Docker Services
        run: |
          docker compose down
          docker compose up -d --remove-orphans
        working-directory: ./tingting_backend/services

      - name: Done
        run: echo "âœ… Deployment completed!"
